CLEARSCREEN.

SET TARGET_PE TO 299000.
SET TARGET_APO TO 400000.
SET NEEDED_APO TO 610000.
SET TARGET_PITCH TO 90.
SET TARGET_HEADING TO 118.2.

LOCK THROTTLE TO 1.0.

function compass_for_vec {

  parameter input_vessel.

  parameter input_vector.

  set east_unit_vec to  vcrs(input_vessel:up:vector, input_vessel:north:vector).

  set east_vel to vdot(input_vector, east_unit_vec). 

  set north_vel to vdot(input_vector, input_vessel:north:vector).

  set compass to arctan2(east_vel, north_vel).

  if compass < 0 {
    set compass to compass + 360.
  }

  return compass.
}

PRINT "Counting down:".
FROM {local countdown is 5.} UNTIL countdown = 0 STEP {SET countdown to countdown - 1.} DO {
    PRINT "..." + countdown.
    WAIT 1. // pauses the script here for 1 second.
}

PRINT "Engine startup".

SET MYSTEER TO HEADING(TARGET_HEADING,TARGET_PITCH).

LOCK STEERING TO MYSTEER.

STAGE.

PRINT "Wait for maximum thrust".

WAIT 6.

PRINT "Lift Off".

STAGE.

DECLARE STG TO 1.
DECLARE ELS_DECOUPLE TO 0.
DECLARE PITCH_MINUS TO 0.
DECLARE SAS_ON TO 0.
DECLARE VECTOR TO SHIP:VELOCITY:SURFACE.

UNTIL SHIP:APOAPSIS > NEEDED_APO {
    IF MAXTHRUST = 0 {
        IF STG = 1 {
            PRINT "First Stage Separation. Second Stage Engines startup".
            
            WAIT 1.
        
            AG9 ON.
            
            STAGE.
                        
            SET STG TO 2.
        } ELSE IF STG = 2 {
            PRINT "Second Stage Separation.".
            
            WAIT 1.
            
            STAGE.
                        
            SET STG TO 3.
        }
    }.
    
    IF ALT:RADAR > 30000 AND ELS_DECOUPLE = 0 {
        PRINT "Launch Escape System decouple".
        
        WAIT 1.
        
        STAGE.
        
        SET ELS_DECOUPLE TO 1.
    }.
            
    IF SHIP:APOAPSIS < TARGET_APO AND PITCH_MINUS = 0 {
        set TARGET_PITCH to ROUND(max( 5, 90 * (1 - max(0, LN(ALT:RADAR / 1000) ) / 6.0 ) ),0).
        
        IF (STG = 1) {
            SET VECTOR TO SHIP:VELOCITY:SURFACE.
        } ELSE {
            SET VECTOR TO SHIP:VELOCITY:OBT.
        }
        
        IF SAS_ON = 0 {
            SET TARGET_HEADING TO 118.2.
        } ELSE {
            SET TARGET_HEADING TO round(compass_for_vec(ship, VECTOR), 1).
        }.
    }
    
    IF ORBIT:INCLINATION > 49.1 AND ALT:RADAR > 20000 AND PITCH_MINUS = 0 {
        SET SAS_ON TO 1.
    }
    
    IF SHIP:APOAPSIS > TARGET_APO AND PITCH_MINUS = 0 AND SAS_ON = 1 {
        SET PITCH_MINUS TO 1.
        set TARGET_PITCH to -20.
        LOCK THROTTLE TO 0.1.
    }.
    
    IF PITCH_MINUS = 1 {
        SET VECTOR TO SHIP:VELOCITY:OBT.
        SET TARGET_HEADING TO round(compass_for_vec(ship, VECTOR), 1).
    }.
        
    SET MYSTEER TO HEADING(TARGET_HEADING,TARGET_PITCH).
    
    
    PRINT "Pitching to " + ROUND(TARGET_PITCH,0) + " degrees                 " AT(0,25).
    PRINT "Periapsis " + ROUND(SHIP:PERIAPSIS,0) AT (0,26).
    PRINT "Target heading " + TARGET_HEADING + "                    " AT (0,27).
    PRINT "Current heading " + ROUND((SHIP:BEARING*-1),0) + "                    " AT (0,28).
    
}.

LOCK THROTTLE TO 0.

SET SHIP:CONTROL:PILOTMAINTHROTTLE TO 0.

UNLOCK STEERING.

PRINT "Fairings decouple".
               
WAIT 3.
                
AG10 ON.

PRINT "Stage 2 decouple".

WAIT 3.

AG7 ON.

PRINT "Solar array deploy".

WAIT 3.

AG1 ON.

STAGE.

WAIT 1.

STAGE.

SAS ON.

WAIT 1.

set sasmode to "prograde".

RCS ON.

WAIT 60.

RCS OFF.

PRINT "Orbit reached. Launch complete".
